import numpy as np 
import scipy.stats as sp
scores = [16695.0, 16689.0, 16688.0, 16689.0, 16706.0, 16706.0, 16688.0, 16709.0, 16705.0, 16690.0, 16688.0, 16704.0, 16704.0, 16704.0, 16704.0, 16704.0, 16704.0, 16704.0, 16704.0, 16704.0, 16687.0, 16689.0, 16687.0, 16687.0, 16689.0, 16687.0, 16704.0, 16707.0, 16686.0, 16688.0, 16688.0, 16688.0, 16707.0, 16688.0, 16702.0, 16696.0, 16694.0, 16706.0, 16704.0, 16703.0, 16706.0, 16693.0, 16705.0, 16705.0, 16703.0, 16703.0, 16703.0, 16693.0, 16693.0, 16693.0, 16693.0, 16693.0, 16704.0, 16704.0, 16704.0, 16702.0, 16702.0, 16702.0, 16702.0, 16691.0, 16692.0, 16692.0, 16701.0, 16693.0, 16703.0, 16701.0, 16703.0, 16703.0, 16701.0, 16701.0, 16701.0, 16701.0, 16703.0, 16691.0, 16691.0, 16700.0, 16700.0, 16692.0, 16692.0, 16702.0, 16700.0, 16702.0, 16695.0, 16699.0, 16699.0, 16691.0, 16699.0, 16688.0, 16683.0, 16690.0, 16704.0, 16689.0, 16689.0, 16711.0, 16688.0, 16685.0, 16688.0, 16686.0, 16683.0]

def z_score(scores):
    mean = np.mean(scores)
    sd = np.std(scores)
    z_scores = []
    for s in scores:
        z = (s-mean)/sd
        z_scores.append(z)
    return z_scores



def p_value(z_scores):
    p_values = []
    for z in z_scores:
        p = sp.norm.sf(abs(z))
        p_values.append(p)
    return p_values

z_scores = z_score(scores)
print(p_value(z_scores))    